{"ast":null,"code":"var _jsxFileName = \"/Users/dhruvpatel/Desktop/personalPortfolio/my_portfolio/src/components/Navbar.js\",\n  _s = $RefreshSig$();\n// src/components/Navbar.js\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/Navbar.css';\nimport Logo from '../assets/logo.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbar = () => {\n  _s();\n  const navigate = useNavigate();\n  const [navbarOpacity, setNavbarOpacity] = useState(1);\n  const handleHomeClick = () => {\n    navigate('/');\n  };\n  const handleProjectsClick = () => {\n    navigate('/projects');\n  };\n  const handleCertificationsClick = () => {\n    navigate('/certifications');\n  };\n  useEffect(() => {\n    let previousScrollPosition = 0;\n    const handleScroll = () => {\n      const scrollPosition = window.scrollY;\n      const maxScroll = window.innerHeight * 0.4;\n\n      // Gradually reduce opacity until scrollPosition reaches 20% of the screen\n      const opacity = Math.min(scrollPosition / maxScroll, 1);\n      setNavbarOpacity(opacity);\n\n      // Show the Navbar again if scrolling upwards\n      if (scrollPosition < previousScrollPosition) {\n        setNavbarOpacity(1);\n      }\n      previousScrollPosition = scrollPosition;\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `navbar ${navbarOpacity < 1 ? 'fixed' : ''}`,\n    style: {\n      opacity: navbarOpacity,\n      backgroundColor: 'black'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"name-link\",\n      onClick: handleHomeClick,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: Logo,\n        style: {\n          height: \"10vh\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav-links\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-style\",\n        onClick: handleProjectsClick,\n        children: \"Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-style\",\n        onClick: handleCertificationsClick,\n        children: \"Certifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Navbar, \"v7JjuCYy+Hfb3Gk0AgBYKI81czc=\", false, function () {\n  return [useNavigate];\n});\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Logo","jsxDEV","_jsxDEV","Navbar","_s","navigate","navbarOpacity","setNavbarOpacity","handleHomeClick","handleProjectsClick","handleCertificationsClick","previousScrollPosition","handleScroll","scrollPosition","window","scrollY","maxScroll","innerHeight","opacity","Math","min","addEventListener","removeEventListener","className","style","backgroundColor","children","onClick","src","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dhruvpatel/Desktop/personalPortfolio/my_portfolio/src/components/Navbar.js"],"sourcesContent":["// src/components/Navbar.js\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/Navbar.css';\nimport Logo from '../assets/logo.svg'\nconst Navbar = () => {\n  const navigate = useNavigate();\n  const [navbarOpacity, setNavbarOpacity] = useState(1);\n\n  const handleHomeClick = () => {\n    navigate('/');\n  };\n\n  const handleProjectsClick = () => {\n    navigate('/projects');\n  };\n\n  const handleCertificationsClick = () => {\n    navigate('/certifications');\n  };\n\n  useEffect(() => {\n    let previousScrollPosition = 0;\n  \n    const handleScroll = () => {\n      const scrollPosition = window.scrollY;\n      const maxScroll = window.innerHeight * 0.4;\n  \n      // Gradually reduce opacity until scrollPosition reaches 20% of the screen\n      const opacity = Math.min(scrollPosition / maxScroll, 1);\n  \n      setNavbarOpacity(opacity);\n  \n      // Show the Navbar again if scrolling upwards\n      if (scrollPosition < previousScrollPosition) {\n        setNavbarOpacity(1);\n      }\n  \n      previousScrollPosition = scrollPosition;\n    };\n  \n    window.addEventListener('scroll', handleScroll);\n  \n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  return (\n    \n    <div className={`navbar ${navbarOpacity < 1 ? 'fixed' : ''}`} style={{ opacity: navbarOpacity,backgroundColor:'black' }}>\n      <div className=\"name-link\" onClick={handleHomeClick}>\n        <img src={Logo} style={{height:\"10vh\"}}/>\n      </div>\n      <div className=\"nav-links\">\n        <button className=\"button-style\" onClick={handleProjectsClick}>\n          Projects\n        </button>\n        <button className=\"button-style\" onClick={handleCertificationsClick}>\n          Certifications\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}